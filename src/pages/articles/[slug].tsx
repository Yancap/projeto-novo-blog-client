import Head from 'next/head'
import Image from 'next/image'
import { Main } from '@/components/Main/index'
import { Flex, Heading, Stack, Spinner, UnorderedList, Input, Button, InputProps, ButtonProps } from '@chakra-ui/react'
import { GetServerSideProps } from 'next'
import { useQuery } from "react-query";
import { Articles } from '@/components/Articles'
import { Comments } from '@/components/Articles/Comments'
import { api_client } from '@/services/api_client'
import { ArticleCommentsResponse, ArticlesResponse } from './article'
import { SubmitHandler, useForm } from 'react-hook-form'
import {  useSession } from 'next-auth/react'

interface CommentsSubmit {
  text: string;
}

interface ArticlesPageProps {
    slug: string;
    data: ArticlesResponse;
}
export default function ArticlesPage({slug, data: {articles}}: ArticlesPageProps) {  
  const input: InputProps = {
    as:"textarea",
    h:"100px",
    bg:"gray.800",
    p:"2",
    variant:"unstyled"
  }
  const button: ButtonProps = {
    variant:"unstyled",
    px:"6",
    borderRadius:"md",
    bg:"purple.700",
    alignSelf:"flex-start",
    size:"sm"
  }
  const {data, isLoading, isRefetching, refetch} = useQuery('comments-'+slug, async () => {
    const {data} = await api_client.get<ArticleCommentsResponse>("comments/from-articles?slug="+articles.slug)
    return {
      comments: data.comments
    }
  })
  const {data: user} = useSession()

  const { register, handleSubmit, reset } = useForm<CommentsSubmit>()
  const submit: SubmitHandler<CommentsSubmit> = async (value, event) => {
  
    let config = {}
    if(user && "token" in user) {
      config = {
        headers: {
          'Authorization': 'Bearer ' + user.token
        }
      }
    }
    
    try {
      const resp = await api_client.post('/comments', { text: value.text, slug: articles.slug }, config)
    } catch (error) {
      console.log(error);
    }
    refetch()
    reset()
  }

  return (
    <>
      <Head>
        <title>Artigos | ARTech</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Main headerComponent={<Articles article={articles}/>}>
        <Stack spacing="4">
           <Heading fontSize="2.25rem" fontWeight="extrabold">
              Comentários
            </Heading> 
            <UnorderedList bg="gray.900" borderRadius="md" m="0" px="4" py="4">
                <Flex as="form" direction="column" py="2" onSubmit={handleSubmit(submit)}>
                    <Input {...input} {...register('text')} placeholder='Escreva seu comentário'/>
                    <Button type="submit" {...button}>Enviar</Button>
                </Flex >
                { (isLoading || isRefetching) && <Spinner />}
                {data?.comments && data.comments.map(comment => (
                    <Comments key={comment.id} comment={comment} refetch={refetch}/>
                ))}
            </UnorderedList>
        </Stack>
      </Main>
    </>
  )
}



export const getServerSideProps: GetServerSideProps = async ({req, res, params}) => {
  const slug = params?.slug ?? '';
  
  try {
    const { data } = await api_client.get<ArticlesResponse>("articles/by/" + slug)
    
    if(!data.articles) {
        return {
            redirect: {
              destination: '/articles',
              permanent: false
            }
        }
    }
    
    return {
        props: {
            data,
            slug
        }
    }
  } catch (err) {
    console.log(err);
    return {
        props: {
          slug
        }
    }
  }
  
  
  
}