import Head from 'next/head'
import Image from 'next/image'
import { Main } from '@/components/Main/index'
import { Box, Icon, Flex, Heading, Stack, Text } from '@chakra-ui/react'
import { HeaderArticlesPage } from '@/components/ArticlesPage/HeaderArticlesPage'
import { CardContainer } from '@/components/ArticlesPage/CardContainer'
import { Card } from '@/components/ArticlesPage/Card'
import { MdMonitor, MdColorLens } from 'react-icons/md'
import { TbAtom2Filled } from 'react-icons/tb'
import { FaMobileAlt } from 'react-icons/fa'
import { GiArtificialIntelligence } from 'react-icons/gi'
import { LuServerCog } from 'react-icons/lu'
import { GetServerSideProps } from 'next'
import { api } from '@/services/api'
import { useQuery } from "react-query";

export interface ArticlesResponse {
  slug: string;
  title: string;
  subtitle: string;
  text: string;
  image: string;
  category: string;
  author: string;
  created_at: string;
  state: string;
}


export default function Articles() {
  
  // TODO: transformar em SSR e criar um Context para isso
  const {data} = useQuery('articles', async () => {
    const {data} = await api.get<ArticlesResponse[]>("/articles")
    const articlesFrontEnd = data.filter(article => article.category === "front-end")
    const articlesBackEnd = data.filter(article => article.category === "back-end")
    const articlesMobile = data.filter(article => article.category === "mobile")
    const articlesUx = data.filter(article => article.category.includes("ux"))
    const articlesIA = data.filter(article => article.category === "inteligencia artificial")
    const articlesDataScience = data.filter(article => article.category === "data science")

    return {
      articlesFrontEnd,
      articlesBackEnd,
      articlesMobile,
      articlesUx,
      articlesIA,
      articlesDataScience
    }
  })
  return (
    <>
      <Head>
        <title>Artigos | ARTech</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Main headerComponent={<HeaderArticlesPage />}>
        <Stack px="10" spacing="8">
          <Heading as="h2" fontSize={{ base: "2.5rem","2xl":"3rem" }}fontWeight="black" mb="4">
              CATEGORIAS
              <Text as="strong" fontWeight="black" color="purple.700">!</Text>
          </Heading>
          <Box>
            <Flex color="purple.300" align="center" gap="2">
              <Icon as={MdMonitor} fontSize="2.25rem"/>
              <Heading as="h3"  fontSize="2.25rem" fontFamily="Ubuntu">
                FRONT-END
              </Heading>
            </Flex>
            <CardContainer articles={data?.articlesFrontEnd}/>
          </Box>

          <Box>
            <Flex color="red.500" align="center" gap="2">
              <Icon as={LuServerCog} fontSize="2.25rem"/>
              <Heading as="h3"  fontSize="2.25rem" fontFamily="Ubuntu">
                  BACK-END
              </Heading>
            </Flex>
            <CardContainer articles={data?.articlesBackEnd}/>

          </Box>

          <Box>
            <Flex color="yellow.500" align="center" gap="2">
              <Icon as={FaMobileAlt} fontSize="2.25rem"/>
              <Heading as="h3"  fontSize="2.25rem" fontFamily="Ubuntu">
                  MOBILE
              </Heading>
            </Flex>
            <CardContainer articles={data?.articlesMobile}/>

          </Box>

          <Box>
            <Flex color="pink.500" align="center" gap="2">
              <Icon as={MdColorLens} fontSize="2.5rem"/>
              <Heading as="h3"  fontSize="2.25rem" fontFamily="Ubuntu">
                  UX & UI
              </Heading>
            </Flex>
            <CardContainer articles={data?.articlesUx}/>

          </Box>
          <Box>
            <Flex color="blue.500" align="center" gap="2">
              <Icon as={GiArtificialIntelligence} fontSize="2.5rem"/>
              <Heading as="h3"  fontSize="2.25rem" fontFamily="Ubuntu">
                  INTELIGENCIA ARTIFICIAL
              </Heading>
            </Flex>
            <CardContainer articles={data?.articlesIA}/>

          </Box>

          <Box>
            <Flex color="green.500" align="center" gap="2">
              <Icon as={TbAtom2Filled} fontSize="2.5rem"/>
              <Heading as="h3"  fontSize="2.25rem" fontFamily="Ubuntu">
                  DATA SCIENCE
              </Heading>
            </Flex>
            <CardContainer articles={data?.articlesDataScience}/>
          </Box>
        </Stack>
      </Main>
    </>
  )
}

export const getServerSideProps: GetServerSideProps = async ({req, res, params}) => {
  
  
  return {
    props: {
    }
  }
}