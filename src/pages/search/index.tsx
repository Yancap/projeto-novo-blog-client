import Head from 'next/head'
import { Main } from '@/components/Main/index'
import {  Box, Stack, Text, Flex } from '@chakra-ui/react'
import { GetServerSideProps } from 'next'
import { api } from '@/services/api'
import { useQuery } from "react-query";
import { api_client } from '@/services/api_client'
import { AllArticlesResponse, Article, CategoriesResponse } from './article'
import { useEffect } from 'react'
import { getServerSession } from 'next-auth'
import { authOptions } from '../api/auth/[...nextauth]'
import { useRouter } from '../../../node_modules/next/router'
import { Search } from '@/components/Header/Search'
import { CardSearch } from '@/components/CardSearch/index'
import { AllArticlesResponse } from '../article'

export interface ArticlesResponse {
  slug: string;
  title: string;
  subtitle: string;
  text: string;
  image: string;
  category: string;
  author: string;
  created_at: string;
  state: string;
}
interface SearchProps{

}

export default function SearchPage({}: SearchProps) {
  const router = useRouter()
  const {data, refetch} = useQuery('categories', async () => {
    const {data} = await api.post<AllArticlesResponse>('/search-engine', { search: router.query.search})
    
    return data.articles
  })
  useEffect(() => {
      refetch()
  }, [router])
  console.log(data);

  return (
    <>
      <Head>
        <title>Pesquisa | ARTech</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Main>
        <Stack px="10" spacing="8">
            <Stack py="10" borderBottom="2px" borderColor="gray.700">
                <Box>
                    <Text as="strong" fontFamily="Poppins" fontWeight="extrabold" _after={{"content": "' - '", fontWeight: "normal"}}>
                        Resultados de
                    </Text>
                    
                    <Text as="span" color="green.400" fontFamily="Poppins">
                        {" " + router.query.search} 
                    </Text>
                </Box>
                <Search value={router.query.search}/>
           </Stack>
          <Stack spacing="4">
            {data && data.map(article => (
                
                <CardSearch article={article} />
            ))}
            {/* <CardSearch /> */}
          </Stack>
          
        </Stack>
      </Main>
    </>
  )
}

export const getServerSideProps: GetServerSideProps = async ({req, res, params}) => {
  const {data: temp} = await api_client.get<CategoriesResponse>("categories")
  const session = await getServerSession(req, res, authOptions);
  
  try {
    const { data } = await api_client.get<AllArticlesResponse>("articles/get-all")
    return {
      props: {
      }
    }
  } catch (err) {
    console.log(err);
    return {
        props: {
        }
    }
  }
}